//!autogenerated 
//src: D:\workspaces\stack-2021\foxsay-work-tests\zavod-games\layout\jml\test\test.jml
//md5: 1f7c00d3f36871220401bb75b345cc5a
package jetgui.generated.jml;

import jetgui.*;
import jetgui.data.*;
import jetgui.generated.jss.*;
import jetgui.generated.jtp.*;
import jetgui.SafeCode;
import jetgui.style.*;
import jetgui.style.EColor;
import jetgui.style.EColorMatrix;
import jetgui.style.EInteract;
import jetgui.style.ESize;
import jetgui.vdom.*;
import taonga.templates.tpl.*;

import jetgui.fn.GuiFunctionList.*;

using jetgui.JetContextHelper;

class TestTest extends VDomComponent {

#if jetguiPreview

	private static var expose: Bool = {
		JetguiPreview.classList["TestTest"] = TestTest;
		true;
	}
	
	public var fieldTypes: Dynamic = {
	}
	
	public var mockProps: Dynamic = {
	}

#end
	
	override public function createComponent(): Component {
		return new TestTestComponent();
	}
	
	override public function copyFrom(from: VDomComponent) {
		
		var f: TestTest = cast(from, TestTest);
		
	}
}

class TestTestComponent extends Component {
	
	static var styleRules: Null<Array<StyleRule>> = 
		{
			var styles: Array<Array<StyleRule>> = [
				JssJssFonts.rules,
			];
			StyleSorter.sortStyles(styles);
		}
	
	


	
	public function new() {
		
	}
	override public function applyVDomAttributes(vDomNode: VDomNode): Void {
		
		var v: TestTest = cast(vDomNode, TestTest);
		ctx = v.ctx;
	}
	
	override public function render(vDom: VDomComponent): Null<Array<VDomNode>> {
		var result: Array<VDomNode> = [];
		result.push({
			var e = new VDomElement(VDomIdMacro.makeId());
			e.styleRules = styleRules;
			e.tag = SafeCode.run("box");
			e.size = SafeCode.run(400);
			e.align = SafeCode.run(0.5);
			e.fillImage = SafeCode.run(new JetAssetPath("jetgui/card/body_light.png"));
			e.addChild({
				var e = new VDomElement(VDomIdMacro.makeId());
				e.styleRules = styleRules;
				e.tag = SafeCode.run("text");
				e.classList = SafeCode.run("text-large");
				e.textColor = SafeCode.run("01bc2f");
				e.offset = SafeCode.run(0);
				e.textAlign = SafeCode.run(center);
				e.textVAlign = SafeCode.run(center);
				e.wrap = SafeCode.run(true);
				e.value = SafeCode.run("jetGui запущен успешно");
				e;
			});
			e;
		});
		return result;
	}	
}

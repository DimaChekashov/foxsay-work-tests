{"version":3,"sources":["api/apiUtils.js","api/openApi.js","redux/photosSlice.js","components/Loaders/Loader/Loader.jsx","components/MainGallery/MainGallery.jsx","components/Loaders/SmallLoader/SmallLoader.jsx","components/Album/Album.jsx","components/Profile/Profile.jsx","components/Header/Header.jsx","App.jsx","redux/store.js","index.js"],"names":["handleResponse","response","a","ok","json","status","error","Error","message","handleError","console","baseUrl","getAllPhotos","photos","localStorage","getItem","Promise","res","JSON","parse","fetch","then","setItem","stringify","catch","LoadingState","initialState","loading","fetchPhotos","createAsyncThunk","photosSlice","createSlice","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","selectPhotos","createSelector","Loader","className","CircularProgress","size","MainGallery","isOpenedProfile","setIsOpenedProfile","setCurrentUserId","useSelector","dispatch","useDispatch","useEffect","log","map","id","albumId","thumbnailUrl","title","src","alt","onClick","SmallLoader","Transition","React","forwardRef","props","ref","Slide","direction","Album","open","handleClose","album","useState","setPhotos","filter","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Profile","userId","user","setUser","albums","setAlbums","openAlbum","setOpenAlbum","selectedAlbum","setSelectedAlbum","getCurrentUser","getAlbum","allAlbums","username","email","phone","website","address","company","Object","keys","length","Container","maxWidth","Grid","container","spacing","item","xs","lg","gutterBottom","List","ListItem","ListItemText","primary","Divider","href","street","suite","city","zipcode","catchPhrase","Button","handleAlbumClickOpen","startIcon","useStyles","makeStyles","theme","root","flexGrow","Header","classes","position","App","currentUserId","configureStore","reducer","photosReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.85edf7fa.chunk.js","sourcesContent":["export async function handleResponse(response) {\r\n    if (response.ok) return response.json();\r\n    if (response.status === 400) {\r\n        const error = await response.json();\r\n        throw new Error(error.message);\r\n    }\r\n    throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\nexport function handleError(error) {\r\n    console.error(\"API call failed. \" + error);\r\n    throw error;\r\n}","import { handleError, handleResponse } from \"./apiUtils\";\r\n\r\nconst baseUrl = \"https://jsonplaceholder.typicode.com/\";\r\n\r\nexport function getAllPhotos() {\r\n    let photos = localStorage.getItem(\"photos\");\r\n    if (photos) {\r\n        return new Promise((res) => res(JSON.parse(photos)));\r\n    }\r\n\r\n    return fetch(baseUrl + \"photos/\")\r\n        .then((response) => handleResponse(response))\r\n        .then((photos) => {\r\n            localStorage.setItem(\"photos\", JSON.stringify(photos));\r\n            return photos;\r\n        })\r\n        .catch(handleError);\r\n}\r\n\r\nexport function getCurrentUser(userId) {\r\n    let user = localStorage.getItem(\"user-\" + userId);\r\n    if (user) {\r\n        return new Promise((res) => res(JSON.parse(user)));\r\n    }\r\n\r\n    return fetch(baseUrl + `users/${userId}`)\r\n        .then((response) => handleResponse(response))\r\n        .then((user) => {\r\n            localStorage.setItem(\"user-\" + userId, JSON.stringify(user));\r\n            return user;\r\n        })\r\n        .catch(handleError);\r\n}\r\n\r\nexport function getAlbum() {\r\n    let albums = localStorage.getItem(\"albums\");\r\n    if (albums) {\r\n        return new Promise((res) => res(JSON.parse(albums)));\r\n    }\r\n\r\n    return fetch(baseUrl + \"albums/\")\r\n        .then((response) => handleResponse(response))\r\n        .then((albums) => {\r\n            localStorage.setItem(\"albums\", JSON.stringify(albums));\r\n            return albums;\r\n        })\r\n        .catch(handleError);\r\n}\r\n","import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createSelector,\r\n} from \"@reduxjs/toolkit\";\r\n\r\nimport { getAllPhotos } from \"../api/openApi\";\r\n\r\nexport const LoadingState = {\r\n    idle: \"idle\",\r\n    loading: \"loading\",\r\n    succeeded: \"succeeded\",\r\n    failed: \"failed\",\r\n};\r\n\r\nconst initialState = {\r\n    photos: [],\r\n    loading: LoadingState.idle,\r\n    error: null,\r\n};\r\n\r\nexport const fetchPhotos = createAsyncThunk(\r\n    \"photos/fetchPhotos\",\r\n    async () => await getAllPhotos()\r\n);\r\n\r\nconst photosSlice = createSlice({\r\n    name: \"photos\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: {\r\n        [fetchPhotos.pending]: (state, action) => {\r\n            state.loading = LoadingState.loading;\r\n        },\r\n        [fetchPhotos.fulfilled]: (state, action) => {\r\n            state.loading = LoadingState.succeeded;\r\n            state.photos = action.payload;\r\n        },\r\n        [fetchPhotos.rejected]: (state, action) => {\r\n            state.loading = LoadingState.failed;\r\n            state.error = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default photosSlice.reducer;\r\n\r\nexport const selectPhotos = createSelector(\r\n    (state) => ({\r\n        photos: state.photos.photos,\r\n        loading: state.photos.loading,\r\n        error: state.photos.error,\r\n    }),\r\n    (state) => state\r\n);\r\n","import React from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport './Loader.css';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            <CircularProgress size={80}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPhotos } from '../../api/openApi';\r\nimport { fetchPhotos, LoadingState, selectPhotos } from '../../redux/photosSlice';\r\nimport Loader from '../Loaders/Loader/Loader';\r\nimport './MainGallery.css';\r\n\r\nfunction MainGallery({isOpenedProfile, setIsOpenedProfile, setCurrentUserId}) {\r\n    const { photos, loading, error } = useSelector(selectPhotos);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getAllPhotos().then(console.log);\r\n        dispatch(fetchPhotos());\r\n    }, [dispatch]);\r\n\r\n    if (loading === LoadingState.loading || loading === LoadingState.idle) return (<div className=\"gallery\"><Loader/></div>);\r\n\r\n    if (loading === LoadingState.failed) return (<h3>{error}</h3>);\r\n\r\n    return (\r\n        <div className=\"gallery\">\r\n            {photos.map(({id, albumId, thumbnailUrl, title}) => {\r\n                return <img \r\n                    key={`photo-` + id} \r\n                    src={thumbnailUrl} \r\n                    alt={title} \r\n                    onClick={() => {\r\n                        setIsOpenedProfile(!isOpenedProfile)\r\n                        setCurrentUserId(albumId);\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainGallery;","import React from 'react';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport './SmallLoader.css';\r\n\r\nfunction SmallLoader() {\r\n    return (\r\n        <div className=\"small-loader\">\r\n            <CircularProgress size={60}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallLoader;","import React, {useState, useEffect} from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport './Album.css';\r\n\r\nimport { getAllPhotos } from '../../api/openApi';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Album({open, handleClose, album}) {\r\n    const [photos, setPhotos] = useState([]);\r\n    const {id, title} = album;\r\n\r\n    useEffect(() => {\r\n        getAllPhotos()\r\n            .then((photos) => photos.filter(({albumId}) => albumId === id))\r\n            .then(setPhotos)\r\n            .catch(console.error);\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\">\r\n                        {title}\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div className=\"album-content\">\r\n                    {photos.map(({id, thumbnailUrl, title}) => {\r\n                        return <img \r\n                            key={`photo-` + id} \r\n                            src={thumbnailUrl} \r\n                            alt={title}\r\n                        />;\r\n                    })}\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Album;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Loader from '../Loaders/Loader/Loader';\r\nimport SmallLoader from '../Loaders/SmallLoader/SmallLoader';\r\n\r\nimport Album from '../Album/Album';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport { getCurrentUser, getAlbum } from '../../api/openApi';\r\n\r\nimport './Profile.css';\r\n\r\nfunction Profile({userId}) {\r\n    const [user, setUser] = useState({});\r\n    const [albums, setAlbums] = useState([]);\r\n    const [openAlbum, setOpenAlbum] = React.useState(false);\r\n    const [selectedAlbum, setSelectedAlbum] = React.useState();\r\n\r\n    useEffect(() => {\r\n        getCurrentUser(userId)\r\n            .then(setUser)\r\n            .catch(console.error);\r\n\r\n        getAlbum()\r\n            .then((allAlbums) => {\r\n                setAlbums(allAlbums.filter(album => album.userId === userId))\r\n            })\r\n            .catch(console.error);\r\n    }, [userId])\r\n\r\n\r\n    const { name, username, email, phone, website, address = {}, company = {} } = user;\r\n\r\n    const handleAlbumClickOpen = (album) => {\r\n        setSelectedAlbum(album);\r\n        setOpenAlbum(true);\r\n    };\r\n    \r\n    const handleAlbumClose = () => {\r\n        setOpenAlbum(false);\r\n    };\r\n\r\n    if (Object.keys(user).length === 0) return (<div className=\"profile\"><Loader/></div>);\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <Container maxWidth=\"lg\">\r\n                <div className=\"profile__block\">\r\n                    <h2 className=\"profile__title\">Пользователь: {username}</h2>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} lg={4}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                Профиль\r\n                            </Typography>\r\n                            <List className=\"profile__list\">\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Имя: ${name}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText>\r\n                                        E-mail: <a href={`mailto:` + email}>{email}</a>\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Телефон: ${phone}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText>\r\n                                        Ссылка на сайт: <a href={`http://` + website}>{website}</a>\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                Адресс\r\n                            </Typography>\r\n                            <List className=\"profile__list\">\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Улица: ${address.street}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Номер дома: ${address.suite}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Город: ${address.city}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Зип-код: ${address.zipcode}`}\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={4}>\r\n                            <Typography gutterBottom variant=\"h6\">\r\n                                Компания\r\n                            </Typography>\r\n                            <List className=\"profile__list\">\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Компания: ${company.name}`}\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                                <ListItem>\r\n                                    <ListItemText\r\n                                        primary={`Фраза: ${company.catchPhrase}`}\r\n                                    />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"albums-block\">\r\n                    <h2 className=\"albums-block__title\">Альбомы</h2>\r\n                    {albums.length === 0 ?\r\n                        <SmallLoader/>\r\n                    :\r\n                        <Grid container spacing={2}>\r\n                            {albums.map((album) => {\r\n                                return (\r\n                                    <Grid item xs={12} lg={4} key={`album-` + album.id}>\r\n                                        <Button\r\n                                            onClick={() => handleAlbumClickOpen(album)}\r\n                                            className=\"album-btn\"\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            startIcon={<FolderIcon />}\r\n                                        >\r\n                                            {album.title}\r\n                                        </Button>\r\n                                    </Grid>\r\n                                );\r\n                            })}\r\n                        </Grid>\r\n                    }\r\n                </div>\r\n                {selectedAlbum ? <Album album={selectedAlbum} open={openAlbum} handleClose={handleAlbumClose}/> : null}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './Header.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Header({isOpenedProfile, setIsOpenedProfile}) {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar className=\"header\" position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        PhotoGallery\r\n                    </Typography>\r\n                    {isOpenedProfile ? <Button color=\"inherit\" onClick={() => setIsOpenedProfile(!isOpenedProfile)}>Назад</Button> : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\n\nimport MainGallery from './components/MainGallery/MainGallery';\nimport Profile from './components/Profile/Profile';\n\nimport './App.css';\nimport Header from './components/Header/Header';\n\nfunction App() {\n  const [isOpenedProfile, setIsOpenedProfile] = useState(false);\n  const [currentUserId, setCurrentUserId] = useState();\n\n  return (\n    <div className=\"App\">\n        <Header isOpenedProfile={isOpenedProfile} setIsOpenedProfile={setIsOpenedProfile} />\n        {\n          !isOpenedProfile ? \n            <MainGallery setCurrentUserId={setCurrentUserId} isOpenedProfile={isOpenedProfile} setIsOpenedProfile={setIsOpenedProfile} />\n          :\n            <Profile userId={currentUserId}/>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport photosReducer from \"./photosSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        photos: photosReducer,\r\n    },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}